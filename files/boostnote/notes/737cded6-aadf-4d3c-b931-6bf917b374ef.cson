createdAt: "2018-12-23T19:21:09.935Z"
updatedAt: "2018-12-24T21:15:26.916Z"
type: "MARKDOWN_NOTE"
folder: "5201fb241aae7a5e7a9b"
title: "f18 Installation"
content: '''
  # f18 Installation
  
  ### Prereqs
  From [f18 git](https:\\\\github.com\\flang-compiler\\f18)
  * GCC 7.2., 7.3, 8.1, 8.2
  * Clang 6.0'
  
  ### Build Instructions
  Instructions at git [README](https://github.com/flang-compiler/f18/blob/master/README.md)
  
  ```
  cd where/you/want/to/build
  export Clang_DIR=<CLANG_DIR>/lib/cmake/clang
  ./configure.sh
  make
  ```
  
  ### Config File
  Modify this `configure.sh` file for your system:
  ```
  #!/bin/bash
  
  # README states that this version will work
  # ml cmake-3.13.2 gcc/7.3 zlib-1.2.11 llvm
  
  RUN="cmake ../git \\
      -DCMAKE_C_COMPILER=/packages/gcc/7.3/bin/gcc \\
      -DCMAKE_CXX_COMPILER=/packages/gcc/7.3/bin/g++ \\
      -DCMAKE_INSTALL_PREFIX=/home/users/scrasmussen/local/f18/git-122318 \\
      -DCMAKE_BUILD_TYPE=Debug \\
      -DCMAKE_CXX_FLAGS=-std=c++17 \\
      -LA"
  
  echo "$RUN"
  eval "$RUN"
  ```
  
  ##### Issues
  *  **NOTE: initial issues, probably because I was using  cmake 3.12.0, switching to cmake 3.13.2 fixed issue**
  Issue caused by `project(f18 CXX)`, line 34 in `CMakeLists.txt`. I think `cmake 3.12.0` couldn't handle some test directories, after `3.13.2` fixed the issue I went back to `3.12.0` and wasn't able to replicate.
  * **NOTE: Setting `CMAKE_CXX_COMPILER` to Clang 6.0.1 doesn't work, GCC 7.3 works**
  `#include <optional>`, file not found
  
  ## LLVM and Clang Install
  1. [Download Source](https:\\\\releases.llvm.org\\download.html) 
  * LLVM Source Code 6.0.1
  * Clang Source Code 6.0.1
  2. Get [Clang Prereqs](https:\\\\llvm.org\\docs\\GettingStarted.html#software)
  * GNU Make 3.79, 3.79.1
  * GCC: look at f18 requirements
  * Python >= 2.7
  * zlib >= 1.2.3.4
  3. Follow [Getting Started](https:\\\\clang.llvm.org\\get_started.html) instructions using the already downloaded `source code` instead of `svn`.
  
  I used the following `configure.sh` script when building.
  
  ```Shell
  #!\\bin\\bash
  
  # ml gcc/7.3 cmake-3.12 zlib-1.2.11
  # This is run from an `llvm-build` directory
  # NOTE: because of the "Unix Makefiles" string I haven't
  #            been able to figure out how to use ${HOME},
  #            thus I'm using absolute paths
  
  RUN='cmake ../llvm-6.0.1.src \\
  -G "Unix Makefiles" \\
  -DLLVM_BUILD_TESTS=ON \\
  -DCMAKE_C_COMPILER=/packages/gcc/7.3/bin/gcc \\
  -DCMAKE_CXX_COMPILER=/packages/gcc/7.3/bin/g++ \\
  -DCMAKE_INSTALL_PREFIX=/home/users/scrasmussen/local/llvm/6.0.1-gcc-7.3'
  
  echo "$RUN"
  eval "$RUN"
  ```
  
  
  
'''
tags: []
isStarred: false
isTrashed: false
