# -*-sh-*-
#!/bin/bash

echo ""
echo "Track a Remote Branch"
echo "If you already have a branch and you want to track a remote branch,"
echo "then you use set-upstream-to command:"
echo "$ git branch --set-upstream-to origin/BRANCH"
echo ""
echo "adding a remote for a fork"
echo "$ git remote add upstream [URL]"
echo ""
echo "syncing a fork"
echo "$ git checkout main"
echo "$ git fetch upstream"
echo "$ git merge upstream/main"
echo ""
echo "Or you can use the -u flag (upstream) when you make your first push:"
echo "$ git push -u origin BRANCH"
echo "          OR"
echo "$ git push [remote] [branch-name]"
echo "    OR for a one-off push"
echo "$ git push [remote] [local-branch]:[remote-branch]"
echo ""
echo "Delete local and then remote branch"
echo "$ git branch -d [branch-name]"
echo "$ git push origin --delete [branch-name]"
echo ""
echo "Good way to view branch relationships"
echo "$ git log --all --graph --decorate --oneline --simplify-by-decoration"
echo ""
echo "Rebase"
echo "$ git rebase -i HEAD~3"
echo "$ git push --force origin feature-branch"
echo ""
echo "Checkout PR, push back to upstream branch"
echo "$ git checkout -b username-branchname develop"
echo "$ git pull https://github.com/user/repo-name.git branchname"
echo "$ git push https://github.com/user/repo-name.git username-branchname:branchname"
echo ""
echo "Update Git Submodules: init"
echo "$ git submodule update --init --recursive"
echo "Update Git Submodules: update"
echo "$ git submodule update --recursive --remote"
echo "also"
echo "$ git pull --recurse-submodules"
echo "after init"
echo "$ git submodule update"
echo "during clone"
echo "$ git clone --recurse-submodules"
echo "After changing .gitmodules sync everything"
echo "$ git submodule sync"
